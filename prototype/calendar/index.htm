<!DOCTYPE html>
<html>
<head>
<meta charset='utf-8' />
<link href='fullcalendar.css' rel='stylesheet' />
<script src='moment.min.js'></script>
<script src='jquery.min.js'></script>
<script src='jquery-ui.min.js'></script>
<script src='fullcalendar.js'></script>
<script src='lang-all.js'></script>
<script src='jquery.ui.touch.js'></script>

<script>

function exacomp_calendar_add_event(event) {
	var event = exacomp_calcendar.event_slot_to_time(event);
	console.log('exacomp_calendar_add_event', event.id, event.title, event.start, event.end);
}

function exacomp_calendar_update_event_time(event) {
	var event = exacomp_calcendar.event_slot_to_time(event);
	console.log('exacomp_calendar_update_event_time', event.id, event.title, event.start, event.end);
}

function exacomp_calendar_delete_event(event) {
	var event = exacomp_calcendar.event_slot_to_time(event);
	console.log('exacomp_calendar_delete_event', event.id, event.title, event.start, event.end);
}

function exacomp_calendar_remove_event(event) {
	var event = exacomp_calcendar.event_slot_to_time(event);
	console.log('exacomp_calendar_remove_event', event.id, event.title, event.start, event.end);
}

function exacomp_calendar_load_events(start, end, timezone, callback) {
	
	// need start + end
	// ignore timezone
	
	var eventsFromMoodle = [
		{
			id: 123,
			title: 'Test Event',
			start: '2015-08-18 08:10:00',
			end: '2015-08-18 09:00:00'
		},
		{
			id: 432,
			title: 'test Event',
			start: '2015-08-19 10:35:00'
		},
		{
			id: 100,
			title: 'Long event',
			start: '2015-08-18 8:35:00',
			end: '2015-08-18 11:55:00'
		}
	];
	
	// convert to calendar timeslots
	eventsFromMoodle = $.map(eventsFromMoodle, function(o){ return exacomp_calcendar.event_time_to_slot(o); })

	// load them
	callback(eventsFromMoodle);
	
	/*
	$.ajax({
		url: 'myxmlfeed.php',
		dataType: 'xml',
		data: {
			// our hypothetical feed requires UNIX timestamps
			start: start.unix(),
			end: end.unix()
		},
		success: function(doc) {
			var events = [];
			$(doc).find('event').each(function() {
				events.push({
					title: $(this).attr('title'),
					start: $(this).attr('start') // will be parsed
				});
			});
			callback(events);
		}
	});
	*/
}

function exacomp_calendar_load_agenda(callback) {
	// load
	var agenda_items = [
		{ id: 1, title: 'My Event 1' },
		{ id: 2, title: 'My Event 2' },
		{ id: 3, title: 'My Event 3' },
		{ id: 4, title: 'My Event 4' },
		{ id: 5, title: 'My Event 5' },
	];
	
	callback(agenda_items);
}

var exacomp_calcendar_config = {
	slots: [
		{
			name: '1. Einheit',
			start: '07:45',
			end: '08:10'
		}, {
			name: '',
			start: '08:10',
			end: '08:35'
		}, {
			name: '2. Einheit',
			start: '08:35',
			end: '09:00'
		}, {
			name: '',
			start: '09:00',
			end: '09:25'
		}, {
			name: '3. Einheit',
			start: '09:30',
			end: '09:55'
		}, {
			name: '',
			start: '09:55',
			end: '10:20'
		}, {
			name: '4. Einheit',
			start: '10:35',
			end: '11:00'
		}, {
			name: '',
			start: '11:00',
			end: '11:25'
		}, {
			name: '5. Einheit',
			start: '11:30',
			end: '11:55'
		}, {
			name: '',
			start: '11:55',
			end: '12:20'
		},
	]
};







exacomp_calcendar = {
	event_slot_to_time: function(origEvent) {
		// clone event
		event = $.extend({}, origEvent);
		
		event.start = this.slot_to_time(event.start, 'start');
		if (event.end) {
			event.end = this.slot_to_time(event.end, 'end');
		} else {
			// get end time from start time
			var nextSlot = moment(origEvent.start).add(1, 'minute');
			event.end = this.slot_to_time(nextSlot, 'end');
		}
		return event;
	},
	event_time_to_slot: function(origEvent) {
		// clone event
		event = $.extend({}, origEvent);
		
		event.start = this.time_to_slot(event.start, 'start');
		if (event.end) event.end = this.time_to_slot(event.end, 'end');
		return event;
	},
	slot_to_time: function(time, type /* start or end */ ) {
		var m = moment(time);
		
		var slot = exacomp_calcendar_config.slots[m.add(type == 'end' ? -1 : 0, 'minute').format('m')];
		if (!slot) {
			console.log('WARNING: Slot not found', time.format(), type);
			slot = exacomp_calcendar_config.slots[0];
		}
		
		return m.format('YYYY-MM-DD')+' '+slot[type];
	},
	time_to_slot: function(time, type /* start or end */ ) {
		var m = moment(time);
		var time = m.format('HH:mm');
		var found_slot_i = null;

		$.each(exacomp_calcendar_config.slots, function(i, slot) {
			if (time == slot[type]) {
				found_slot_i = i;
			}
		});
		
		if (found_slot_i === null) {
			console.log('WARNING: Slot not found', time, type);
			found_slot_i = 0;
		}
		
		return m.format('YYYY-MM-DD')+' 00:'+(type == 'end' ? found_slot_i+1 : found_slot_i)+':00';
	},
};

$(function() {

	/* initialize the external events
	-----------------------------------------------------------------*/

	var $eventDiv = $( '#external-events' );
	var $trash = $( '#trash' );

	exacomp_calendar_load_agenda(function(agenda_items) {
		$.each(agenda_items, function(i, item){ add_agenda_item(item); });
	});
	
	function add_agenda_item(data) {
		var el = $( "<div class='fc-event'>" ).appendTo( $eventDiv ).text( data.title );
		el.data('event', data);
		
		// store data so the calendar knows to render an event upon drop
		/*
		$(this).data('event', {
			title: $.trim($(this).text()), // use the element's text as the event title
			stick: true // maintain when user navigates (see docs on the renderEvent method)
		});
		*/

		el.draggable({
		  zIndex: 999,
		  revert: true, 
		  revertDuration: 0 
		});
		el.addTouch();
	}


	/* initialize the calendar
	-----------------------------------------------------------------*/
	
	$trash.droppable({
		// accept: ".special"
		drop: function(event, ui ) {
			if (confirm('Wirklich löschen?')) {
				ui.draggable.remove();
			}
		},
		
		hoverClass: 'hover',
	});
	
	function hover_check(e) {
		if (e && isEventOverDiv($eventDiv, e)) {
			$eventDiv.addClass('hover');
		} else {
			$eventDiv.removeClass('hover');
		}

		if (e && isEventOverDiv($trash, e)) {
			$trash.addClass('hover');
		} else {
			$trash.removeClass('hover');
		}
	}
	
	function isEventOverDiv($div, event) {

		var x = event.pageX, y = event.pageY;
		var offset = $div.offset();
		offset.right = $div.outerWidth() + offset.left;
		offset.bottom = $div.outerHeight() + offset.top;

		// Compare
		return (x >= offset.left
			&& y >= offset.top
			&& x <= offset.right
			&& y <= offset .bottom);
	}

	$('#calendar').fullCalendar({
		header: {
			left: 'today prev,next',
			center: 'title',
			right: 'month,agendaWeek,agendaDay'
		},
		lang: 'de',
		defaultView: 'agendaWeek',
		minTime: "00:00:00",
		maxTime: "00:"+exacomp_calcendar_config.slots.length+":00",
		axisWidth: 40,
		slotDuration: "00:01:00",
		hiddenDays: [ 0, 6 ], // no sunday and saturday
		allDaySlot: false,
		defaultTimedEventDuration: '00:01:00', // default event length
		
		contentHeight: "auto",
		
		eventConstraint: {
			start: '00:00:00', // a start time (10am in this example)
			end: "00:"+exacomp_calcendar_config.slots.length+":00"
		},

		editable: true,
		droppable: true, // this allows things to be dropped onto the calendar
		dragRevertDuration: 0,
		
		drop: function() {
			// when dropping an external element remove it
			$(this).remove();
		},

		events: exacomp_calendar_load_events,
		
		eventRender: function(event, element) {
			// console.log(element.html());

			// delete time (actually slot time)
			element.find(".fc-time").remove();

			// TODO:
			element.find(".fc-content").append(
				'	<div class="event-extra">' +
				'	<div>L: <input type="checkbox" /> S: <input type="checkbox" /></div>' +
				'	<div><a href="#">edit</a></div>' +
				'</div>');
			
			$(element).addTouch();
		},
		
		eventDragStart: function() {
			$("html").bind('mousemove', hover_check);
		},
		
		eventDragStop: function( event, jsEvent, ui, view ) {
			$("html").unbind('mousemove', hover_check);
			hover_check(false);
		
			if (isEventOverDiv($eventDiv, jsEvent)) {
				$('#calendar').fullCalendar('removeEvents', event._id);

				add_agenda_item(event);
				exacomp_calendar_remove_event(event);
			}

			if (isEventOverDiv($trash, jsEvent)) {
				if (confirm('Wirklich löschen?')) {
					$('#calendar').fullCalendar('removeEvents', event._id);
					
					exacomp_calendar_delete_event(event);
				}
			}
		},
		
		viewRender: function(view, element) {
			// reset axis labels
			var i = 0, einheit = 0;
			element.find('.fc-time span').each(function(){
				var slot = exacomp_calcendar_config.slots[i];
				this.innerHTML = (slot.name ? '<b>' + slot.name + '</b><br />' : '')
					+ '<span style="font-size: 85%">'+slot.start+'-'+slot.end+'</span>';
				i++;
				if (slot.name) einheit++;
				if (einheit%2)
					$(this).closest('tr').css('background-color', 'rgba(0, 0, 0, 0.08)');
			});
			
			view.updateSize();
		},
		
		eventResize: function(event, delta, revertFunc) {
			exacomp_calendar_update_event_time(event);
		},
		eventDrop: function(event, delta, revertFunc) {
			exacomp_calendar_update_event_time(event);
		},
		eventReceive: function(event) {
			exacomp_calendar_add_event(event);
		},
	});
});

</script>
<style>

	/* event resize control bigger */
	.fc-time-grid-event .fc-resizer {
		height: 12px;
		line-height: 12px;
	}
	.fc-title {
		text-align: center;
		font-size: 1.25em;
	}
	

	.fc-time-grid .fc-slats td {
		height: 5em;
	}
	#calendar {
		float: right;
		width: 900px;
	}
	
	body {
		margin-top: 40px;
		text-align: center;
		font-size: 14px;
		font-family: "Lucida Grande",Helvetica,Arial,Verdana,sans-serif;
	}
		
	#wrap {
		width: 1100px;
		margin: 0 auto;
	}
		
	#external-events {
		float: left;
		width: 150px;
		padding: 0 10px;
		border: 1px solid #ccc;
		background: #eee;
		text-align: left;
	}
	#external-events.hover {
		background: blue;
	}
	
	#trash {
		float: left;
		width: 150px;
		padding: 0 10px;
		border: 1px solid #ccc;
		background: #eee;
		text-align: left;
		margin-top: 20px;
	}
	#trash.hover {
		background: blue;
	}

	#external-events h4 {
		font-size: 16px;
		margin-top: 0;
		padding-top: 1em;
	}
		
	#external-events .fc-event {
		margin: 10px 0;
		cursor: pointer;
		min-height: 50px;
	}
	.fc-event .event-extra {
		border-top: 1px solid white;
		margin-top: 5px;
		padding: 5px;
	}
	
	#external-events p {
		margin: 1.5em 0;
		font-size: 11px;
		color: #666;
	}
		
	#external-events p input {
		margin: 0;
		vertical-align: middle;
	}

	#calendar {
		float: right;
		width: 900px;
	}

</style>
</head>
<body>
	<div id='wrap'>

		<div id='external-events'>
			<h4>Events</h4>
		</div>

		<div id='calendar'></div>

		<div id='trash'>
			<h4>Papierkorb</h4>
		</div>

		<div style='clear:both'></div>

	</div>
</body>
</html>
